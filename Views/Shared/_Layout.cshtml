<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Car Rental</title>
    <link rel="stylesheet" href="~/css/output.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/UrbanDrive.styles.css" asp-append-version="true" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Work+Sans:wght@400;500;600;700&display=swap" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Work+Sans:wght@400;500;600;700&display=swap" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

</head>

<body class="">
    <!-- Toast Notification -->
    <div x-data="{ show: false, message: '', type: 'success' }" x-show="show" x-transition x-cloak
        class="fixed top-5 right-5 px-4 py-3 rounded-lg shadow-lg text-white text-sm" :class="{
             'bg-green-500': type === 'success',
             'bg-red-500': type === 'error',
             'bg-yellow-500': type === 'warning',
             'bg-blue-500': type === 'info'
         }">
        <span x-text="message"></span>
    </div>

    <div class="min-h-screen bg-white">
        <header>

        </header>

        <div class="">
            <main role="main" class="">
                @RenderBody()
            </main>
        </div>
    </div>

    <link rel="stylesheet" href="~/dist/styles.bundle.js" asp-append-version="true" />
    <script src="~/dist/app.bundle.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/phosphor-icons@1.4.2/src/index.min.js"></script>

    <!-- Toast Script -->
    <script>
        function showToast(message, type = 'success', duration = 3000) {
            let toast = document.querySelector('[x-data]');
            toast.__x.$data.message = message;
            toast.__x.$data.type = type;
            toast.__x.$data.show = true;
            setTimeout(() => toast.__x.$data.show = false, duration);
        }

        document.addEventListener('DOMContentLoaded', () => {
            @if (TempData["ToastMessage"] != null)
                {
                    <text> showToast("@TempData["ToastMessage"]", "@TempData["ToastType"]"); </text>
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
