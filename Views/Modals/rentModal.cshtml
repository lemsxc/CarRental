<div x-cloak x-show="rentModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50"
    x-on:keydown.escape.window="rentModal = false">
    <div class="bg-white p-6 rounded-lg w-1/4">
        <h2 class="text-xl font-bold mb-2">Car Details</h2>

        <div>
            <!-- Car Image -->
            <img id="car_image" x-bind:src="carDetails.image" alt="Car Image"
                class="w-full h-40 object-cover rounded-md mb-3">

            <!-- Car Details -->
            <p class="font-semibold hidden">Id <span id="car_id" x-text="carDetails.id"></span></p>
            <p class="font-semibold">Car Name: <span id="car_name"
                    x-text="carDetails.brand + ' ' + carDetails.model"></span></p>
            <p class="text-gray-600">Transmission: <span id="car_transmission" x-text="carDetails.transmission"></span>
            </p>
            <p class="text-gray-600">Fuel Type: <span id="car_fuel" x-text="carDetails.fuel_type"></span></p>
            <p class="text-gray-600">Mileage: <span id="car_mileage" x-text="carDetails.mileage"></span></p>
            <p class="text-green-600 font-bold">Price: $<span id="car_price" x-text="carDetails.rent_price"></span>
                / day</p>


            <!-- Reservation Inputs -->
            <div class="mt-2">
                <label for="start_date" class="block text-sm font-medium text-gray-700">Start Date</label>
                <input type="date" id="start_date" class="w-full p-2 border rounded-md" required>
            </div>

            <div class="mt-2">
                <label for="end_date" class="block text-sm font-medium text-gray-700">End Date</label>
                <input type="date" id="end_date" class="w-full p-2 border rounded-md" required>
            </div>


            <!-- Need Driver Checkbox -->
            <div class="mt-3">
                <label class="flex items-center space-x-2">
                    <input type="checkbox" id="need_driver" class="w-4 h-4 text-blue-500"
                        x-on:change="toggleDriverList">
                    <span class="text-gray-700 font-medium">Need a Driver?</span>
                </label>
            </div>

            <!-- Driver Selection Dropdown (Initially Hidden) -->
            <div id="driverSelection" class="mt-3 hidden">
                <label for="driver_list" class="block text-sm font-medium text-gray-700">Select a Driver</label>
                <select id="driver_list" class="w-full p-2 border rounded-md">
                    <option value="" selected disabled>Loading drivers...</option>
                </select>
            </div>

            <!-- Pay with Stripe Button -->
            <button id="checkoutButton" class="bg-green-500 text-white px-4 py-2 rounded-lg mt-4 w-full">
                Pay with Stripe
            </button>

            <!-- Cancel Button -->
            <button x-on:click="rentModal = false" class="bg-gray-400 text-white px-4 py-2 rounded-lg mt-3 w-full">
                Cancel
            </button>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("checkoutButton").addEventListener("click", checkout);
        document.getElementById("need_driver").addEventListener("change", toggleDriverList);
    });

    function toggleDriverList() {
        const driverSelection = document.getElementById("driverSelection");
        if (document.getElementById("need_driver").checked) {
            driverSelection.classList.remove("hidden");
            fetchDrivers();
        } else {
            driverSelection.classList.add("hidden");
        }
    }

    async function fetchDrivers() {
        const driverDropdown = document.getElementById("driver_list");
        driverDropdown.innerHTML = "<option>Loading drivers...</option>";

        try {
            const response = await fetch("/api/drivers");
            const drivers = await response.json();

            driverDropdown.innerHTML = "<option value=''>Select a Driver</option>";
            drivers.forEach(driver => {
                driverDropdown.innerHTML += `<option value="${driver.id}">${driver.name}</option>`;
            });
        } catch (error) {
            driverDropdown.innerHTML = "<option>Error loading drivers</option>";
            console.error("Failed to fetch drivers:", error);
        }
    }

    async function checkout() {
        const carId = document.getElementById("car_id").textContent;
        const carName = document.getElementById("car_name").textContent;
        const carPrice = document.getElementById("car_price").textContent;
        const carImage = document.getElementById("car_image").src;
        const startDate = document.getElementById("start_date").value;
        const endDate = document.getElementById("end_date").value;
        const needDriver = document.getElementById("need_driver").checked;
        const driverId = needDriver ? document.getElementById("driver_list").value : null;

        if (!startDate || !endDate) {
            alert("Please select both start and end dates.");
            return;
        }

        const response = await fetch("/Payment/CreateCheckoutSession", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                carId, carName, carImage, carPrice, startDate, endDate, needDriver, driverId
            })
        });

        const session = await response.json();
        window.location.href = session.url;
    }
</script>
